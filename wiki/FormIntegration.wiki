#summary Help - How to enable Dojo's form functionality in dojango.

Note: The form integration just works with *Django version >= 1.0.2*
Note: This page refers to the latest version from SVN trunk

Since version 0.4 dojango provides the capability to use Dojo form elements the same as you would use normal forms in Django. The big advantage of this is, that you can e.g. let the user enter a date via a date-picker, let him format a descripton with a rich text editor or let him select an integer value with a number spinner or a slider. Another benefit of using Dojango forms is, that Django's form validation is passed to the Dojo widgets so the entered data can be validated in the frontend with the same validation rules without needing to define them in your !JavaScript code again. Of course you also can define the look and feel of your Dojo widgets by defining DOJANGO_DOJO_THEME in your settings.py (see [Configuration]).

Dojango let you define those enhanced Dojo widgets within your Django code. There is not much new to learn, if you use Dojango forms. All form fields, widgets and other [http://docs.djangoproject.com/en/dev/ref/forms/ form functionality] that is available in Django (e.g. [http://docs.djangoproject.com/en/dev/topics/forms/modelforms/#topics-forms-modelforms forms for models], [http://docs.djangoproject.com/en/dev/topics/forms/formsets/#topics-forms-formsets formsets], ...) is now implemented (extended) within dojango. If you would like to enhance your normal django forms with more enhanced Dojo form elements, you now just simply have to import the forms library from dojango:

{{{
# instead of
# from django.forms import *
# do this:
from dojango.forms import *
}}}

To use the form integration, you first have to follow the GettingStarted guide and additionaly have to enable the following middleware in your settings.py:

{{{
MIDDLEWARE_CLASSES = (
    'dojango.middleware.DojoCollector',
    # (not named DojoAutoRequireMiddleware anymore!)
    // ...
)
}}}

This middleware initializes a collector module for the current request thread, where each individual widget can add its used Dojo modules. All collected modules of one request are then available in the template context *DOJANGO.COLLECTOR*. If you extend your template from `dojango/base.html` or `dojango/base_i18n.html` you don't have to care about it. Just generate your dojango form and place it in the template block *dojango_content*:

{{{
{% extends "dojango/base.html" %}
{% block dojango_content %}
    {# PLACE YOUR FORMS HERE #}
{% endblock %}
}}}

If you use `include.html` or `include_i18n.html` you have to deal with the Dojo collector in your template on your own:

{{{
<script type="text/javascript">
    {% for require in DOJANGO.COLLECTOR %}
        dojo.require("{{ require }}");
    {% endfor %}		
</script>
}}}

= Form fields and widgets =

The main difference between the Django form fields and the Dojango ones is, that all validation attributes are passed to the widgets. Dojo's form elements can also validate individual form elements in the browser and dojango just populates the validation of the form fields to each widget. Thus the following possible form field attributes are forwarded to the assigned widget:

  * required
  * help_text
  * min_value
  * max_value
  * max_length
  * max_digits
  * decimal_places
  * js_regex

The widget itself then decides, how each attribute is assigned to the Dojo widget. In the following table you see, which widget is assigned as default to a form field and which validation parameters are possible within that form field:

||**dojango.forms.fields (extended django.forms.fields)**||**dojango.forms.widgets**||**possible parameters**||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#charfield CharField]||!ValidationTextInput||required, help_text, max_length, min_length||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#choicefield ChoiceField]||Select||required, help_text||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#typedchoicefield TypedChoiceField]||Select||required, help_text||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#integerfield IntegerField]||!NumberTextInput||required, help_text, max_value, min_value||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#booleanfield BooleanField]||!CheckboxInput||required, help_text||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#filefield FileField]||!FileInput||required, help_text||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#imagefield ImageField]||!FileInput||required, help_text||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#datefield DateField]||!DateInput||required, help_text, min_value, max_value||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#timefield TimeField]||!TimeInput||required, help_text, min_value, max_value||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#datetimefield DateTimeField]||!DateTimeInput||required, help_text, min_value, max_value||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#splitdatetimefield SplitDateTimeField]||!DateTimeInput||required, help_text, min_value, max_value||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#regexfield RegexField]||!ValidationTextInput||required, help_text, js_regex||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#decimalfield DecimalField]||!NumberTextInput||required, help_text, max_value, min_value, max_digits, decimal_places||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#floatfield FloatField]||!ValidationTextInput||required, help_text, max_value, min_value||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#filepathfield FilePathField]||Select||required, help_text||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#multiplechoicefield MultipleChoiceField]||!SelectMultiple||required, help_text||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#nullbooleanfield NullBooleanField]||!NullBooleanSelect|| ||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#emailfield EmailField]||!EmailTextInput||required, help_text||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#ipaddressfield IPAddressField]||IPAddressTextInput||required, help_text||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#urlfield URLField]||URLTextInput||required, help_text||
||[http://docs.djangoproject.com/en/dev/ref/forms/fields/#slugfield SlugField]||!ValidationTextInput||required, help_text||
 
= Dojango widgets utilizing Dojo widgets =

As described above several field attributes are now passed to the widget and the widget evaluates what attribute can be set within the assigned Dojo widget (see Field attribute => Widget attribute column). Dojo widgets support more attributes (for possible attributes see the documentation of each Dojo widget in the [http://api.dojotoolkit.org Dojo API] or the [http://docs.dojocampus.org User documentation of Dojo]) than just validation attributes and it is possible to define those separately. The following example shows, how a form field can be defined with a Dojo widget that has additional attributes ([http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.Widget.attrs same as for normal html form elements in django]):

{{{
from dojango.forms import *
my_field = DateField(
    required=True, 
    help_text="Enter a valid date!", 
    widget=DateInput(
        attrs={
            'invalidMessage': 'The date is invalid!', 
            'class': 'customClass'
        }
    ))
}}}

As you can see in this example we pass in two additional parameters (`invalidMessage`, `class`) to the widget. The `required` and the `help_text` attributes itself are passed automatically to the widget and it is not nescessary to define that as an additional parameter.

The resulting HTML for that field would look like this (Dojango is defining Dojo widgets declaratively):

{{{
<input dojoType="dijit.form.DateTextBox" 
    promptMessage="Enter a valid date!" 
    name="my_field" 
    invalidMessage="The date is invalid!" 
    id="id_my_field" 
    required="true" 
    type="text" 
    class="customClass"/>
}}}
 
== Overwritten Django's default widgets ==

||**dojango.forms.widgets (extended django.forms.widgets)**||**Dojo widget**||**Field attribute => Widget attribute**||**Notes**||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/ Widget]||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit._Widget dijit._Widget]|| || ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/ Input]|| || || ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.TextInput TextInput]||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.TextBox dijit.form.TextBox]||max_length => maxLength|| ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.PasswordInput PasswordInput]||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.TextBox dijit.form.TextBox]||max_length => maxLength|| ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.HiddenInput HiddenInput]||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.TextBox dijit.form.TextBox]|| || ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.MultipleHiddenInput MultipleHiddenInput]||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.TextBox dijit.form.TextBox]|| || ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.FileInput FileInput]||[http://api.dojotoolkit.org/jsdoc/HEAD/dojox.form.FileInput dojox.form.FilenInput]|| ||additional CSS: dojox/form/resources/!FileInput.css||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.Textarea Textarea]||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.Textarea dijit.form.Textarea]||max_length => maxLength|| ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.DateInput DateInput]||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.DateTextBox dijit.form.DateTextBox]||required => required<br>help_text => promptMessage<br>min_value => constraints["min"]<br>max_value => constraints["max"]|| ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.TimeInput TimeInput]||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.TimeTextBox dijit.form.TimeTextBox]||required => required<br>help_text => promptMessage<br>min_value => constraints["min"]<br>max_value => constraints["max"]|| ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.CheckboxInput CheckboxInput]||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.CheckBox dijit.form.CheckBox]|| || ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.Select Select]||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.FilteringSelect dijit.form.FilteringSelect] (Dojo <= 1.3.2)<br>[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.Select dijit.form.Select] (since Dojo 1.4.0)||required => required<br>help_text => promptMessage (just with Dojo <= 1.3.2)|| ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.NullBooleanSelect NullBooleanSelect]||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.FilteringSelect dijit.form.FilteringSelect] (Dojo <= 1.3.2)<br>[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.Select dijit.form.Select] (since Dojo 1.4.0)||required => required<br>help_text => promptMessage (just with Dojo <= 1.3.2)|| ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.SelectMultiple SelectMultiple]||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.MultiSelect dijit.form.MultiSelect]|| || ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.RadioInput RadioInput]|| || ||identical to Django's !RadioInput||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.RadioFieldRenderer RadioFieldRenderer]|| || ||identical to Django's !RadioInput||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.RadioSelect RadioSelect]||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.RadioButton dijit.form.RadioButton]|| || ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.CheckboxSelectMultiple CheckboxSelectMultiple]||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.CheckBox dijit.form.CheckBox]|| || ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.MultiWidget MultiWidget]|| || || ||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.SplitDateTimeWidget SplitDateTimeWidget]|| || ||using !DateInput and !TimeInput||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.DateTimeInput DateTimeInput]|| || ||same as !SplitDateTimeWidget||
||[http://docs.djangoproject.com/en/dev/ref/forms/widgets/#django.forms.SplitHiddenDateTimeWidget SplitHiddenDateTimeWidget]||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.TextBox dijit.form.TextBox]|| || ||

== Additional widgets ==

The following widgets don't have an equivalent Django widget.

||**dojango.forms.widgets**||**Dojo widget**||**Field attribute => Widget attribute**||**Notes**||
||!SimpleTextarea||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.SimpleTextarea dijit.form.SimpleTextarea]||max_length => maxLength|| ||
||!EditorInput||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.Editor dijit.Editor]|| || ||
||!HorizontalSliderInput||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.HorizontalSlider dijit.form.HorizontalSlider]||min_value => minimum<br>max_value => maximum|| ||
||!VerticalSliderInput||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.VerticalSlider dijit.form.VerticalSlider]||min_value => minimum<br>max_value => maximum|| ||
||!ValidationTextInput||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.ValidationTextBox dijit.form.ValidationTextBox]||required => required<br>help_text => promptMessage<br>js_regex => regExp<br>max_length => maxLength|| ||
||!ValidationPasswordInput||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.ValidationTextBox dijit.form.ValidationTextBox]||required => required<br>help_text => promptMessage<br>js_regex => regExp<br>max_length => maxLength|| ||
||!EmailTextInput||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.ValidationTextBox dijit.form.ValidationTextBox]||required => required<br>help_text => promptMessage<br>js_regex => regExp<br>max_length => maxLength||using the following regex: [http://api.dojotoolkit.org/jsdoc/HEAD/dojox.validate.regexp dojox.validate.regexp.emailAddress]||
||IPAddressTextInput||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.ValidationTextBox dijit.form.ValidationTextBox]||required => required<br>help_text => promptMessage<br>js_regex => regExp<br>max_length => maxLength||using the following regex: [http://api.dojotoolkit.org/jsdoc/HEAD/dojox.validate.regexp dojox.validate.regexp.ipAddress]||
||URLTextInput||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.ValidationTextBox dijit.form.ValidationTextBox]||required => required<br>help_text => promptMessage<br>js_regex => regExp<br>max_length => maxLength||using the following regex: [http://api.dojotoolkit.org/jsdoc/HEAD/dojox.validate.regexp dojox.validate.regexp.url]||
||!NumberTextInput||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.NumberTextBox dijit.form.NumberTextBox]||required => required<br>help_text => promptMessage<br>min_value => constraints["min"]<br>max_value => constraints["max"]<br>decimal_places => constraints["places"]|| ||
||!RangeBoundTextInput||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.RangeBoundTextBox dijit.form.RangeBoundTextBox]||required => required<br>help_text => promptMessage<br>min_value => constraints["min"]<br>max_value => constraints["max"]<br>decimal_places => constraints["places"]|| ||
||!NumberSpinnerInput||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.NumberSpinner dijit.form.DateTextBox]||required => required<br>help_text => promptMessage<br>min_value => constraints["min"]<br>max_value => constraints["max"]<br>decimal_places => constraints["places"]|| ||
||!RatingInput||[http://api.dojotoolkit.org/jsdoc/HEAD/dojox.form.Rating dojox.form.Rating]||max_value => numStars|| ||
||!DateInputAnim||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.DateTextBox dijit.form.DateTextBox]||required => required<br>help_text => promptMessage<br>min_value => constraints["min"]<br>max_value => constraints["max"]||additional CSS: dojox/widget/Calendar/Calendar.css||
||!DropDownSelect||[http://api.dojotoolkit.org/jsdoc/HEAD/dojox.form.DropDownSelect dojox.form.DropDownSelect]||required => required<br>help_text => promptMessage||additional CSS: dojox/form/resources/!DropDownSelect.css||
||!CheckedMultiSelect||[http://api.dojotoolkit.org/jsdoc/HEAD/dojox.form.CheckedMultiSelect dojox.form.CheckedMultiSelect]||required => required<br>help_text => promptMessage||additional CSS: dojox/form/resources/!CheckedMultiSelect.css. The option _multiple_ can't be used on that widget.||
||!FilteringSelect||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.FilteringSelect dijit.form.FilteringSelect]||required => required<br>help_text => promptMessage||||
||!ComboBox||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.ComboBox dijit.form.ComboBox]||required => required<br>help_text => promptMessage||||
||!FilteringSelectStore||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.FilteringSelect dijit.form.FilteringSelect]||required => required<br>help_text => promptMessage||This form widget requires a URL (that is providing a dojo data source) as first parameter. It uses [http://api.dojotoolkit.org/jsdoc/HEAD/dojo.data.ItemFileReadStore dojo.data.ItemFileReadStore] as default store, which can be changed by passing an additional *store* attribute. Also additional store attributes can be passed via *store_attrs*.||
||!ComboBoxStore||[http://api.dojotoolkit.org/jsdoc/HEAD/dijit.form.ComboBox dijit.form.ComboBox]||required => required<br>help_text => promptMessage||This form widget requires a URL (that is providing a dojo data source) as first parameter. It uses [http://api.dojotoolkit.org/jsdoc/HEAD/dojo.data.ItemFileReadStore dojo.data.ItemFileReadStore] as default store, which can be changed by passing an additional *store* attribute. Also additional store attributes can be passed via *store_attrs*.||
||!ListInput||[http://api.dojotoolkit.org/jsdoc/HEAD/dojox.form.ListInput dojox.form.ListInput]|| || ||