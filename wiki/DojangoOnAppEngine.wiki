#summary Help - How to deploy your dojango powered app to Google's AppEngine

=Running dojango on [http://code.google.com/intl/de-DE/appengine/ AppEngine]=

This little tutorial helps you to get dojango up on Google AppEngine.

Before you start with this, you should get and install the AppEngine SDK:

http://code.google.com/intl/de-DE/appengine/downloads.html

Afterwards you need need a helper project to get started quickly. There is the [http://code.google.com/p/app-engine-patch/ AppEngine Patch] and the  [http://code.google.com/p/google-app-engine-django/ Google AppEngine Helper] you can use to start an empty Django AppEngine project. The currently released version of the [http://code.google.com/p/google-app-engine-django/ AppEngine Helper] just supports Django 0.96 (The version, that is available on Google AppEngine. Note: they are working on adding a newer Django version) and the [http://code.google.com/p/app-engine-patch/ AppEngine Patch] already contains Django Version 1.0.2. [http://code.google.com/p/app-engine-patch/ AppEngine Patch] also contains several utilities that help developing applications with Django on AppEngine:

{{{
cd ~
wget http://app-engine-patch.googlecode.com/files/appenginepatch-sample-0.9.2.zip
unzip appenginepatch-sample-0.9.2.zip
# renaming the extracted folder to your appengine name (just a recommendation)
mv appenginepatch-sample my-appengine
## or alternatively
## wget http://google-app-engine-django.googlecode.com/files/appengine_helper_for_django-r52.zip
## unzip appengine_helper_for_django-r52.zip
## renaming the extracted folder to your appengine name (just a recommendation)
## mv appengine_helper_for_django my-appengine
}}}

Now go to that directory and do the same steps as in the GettingStarted guide, but starting with step *1. Add dojango as app to your project*. The AppEngine helper for django already contains a simple django project mixed with files needed by AppEngine.

To suit the helper to your needs, you have to set the application name, define, which files should be served statically and which files should be skipped when synching to AppEngine in your *app.yaml*:

{{{
# set the right name of your AppEngine
# you need to have permissions on my-appengine.appspot.com 
application: my-appengine
version: 1
runtime: python
api_version: 1

handlers:
- url: /dojango/media
  static_dir: dojango/media

- url: /.*
  script: main.py

skip_files: |
  ^(.*/)?(
  (dojango/media/dojo/.*)|
  (\.pyc)|
  (\..*)|
  )$
}}}

Now you are ready to add your app to AppEngine. Start you AppEngineLauncher and add your newly created dojango AppEngine project to it by selecting File -> Add Existing Project and let it point to your newly created folder.

You should see a picture like this:

http://static.uxebu.com/img/dojango_appengine.png

By pressing the button *Deploy* your application will be uploaded and is then available on:

http://my-appengine.appspot.com/dojango/test/

You then develop your django app as usual and deploy your changes to AppEngine whenever you want to.